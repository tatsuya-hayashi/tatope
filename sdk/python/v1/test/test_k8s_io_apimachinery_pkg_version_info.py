# coding: utf-8

"""
    tatoperator

    Python SDK for Tat-Operator

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from tatope.models.k8s_io_apimachinery_pkg_version_info import K8sIoApimachineryPkgVersionInfo

class TestK8sIoApimachineryPkgVersionInfo(unittest.TestCase):
    """K8sIoApimachineryPkgVersionInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> K8sIoApimachineryPkgVersionInfo:
        """Test K8sIoApimachineryPkgVersionInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `K8sIoApimachineryPkgVersionInfo`
        """
        model = K8sIoApimachineryPkgVersionInfo()
        if include_optional:
            return K8sIoApimachineryPkgVersionInfo(
                build_date = '',
                compiler = '',
                git_commit = '',
                git_tree_state = '',
                git_version = '',
                go_version = '',
                major = '',
                minor = '',
                platform = ''
            )
        else:
            return K8sIoApimachineryPkgVersionInfo(
                build_date = '',
                compiler = '',
                git_commit = '',
                git_tree_state = '',
                git_version = '',
                go_version = '',
                major = '',
                minor = '',
                platform = '',
        )
        """

    def testK8sIoApimachineryPkgVersionInfo(self):
        """Test K8sIoApimachineryPkgVersionInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
